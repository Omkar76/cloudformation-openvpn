AWSTemplateFormatVersion: "2010-09-09"
Description: This cfn template is to easily setup openvpn on ec2 instance
Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: "Name of an existing SSH Keypair to access the instance"
  SSHandWebLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x. Default is 0.0.0.0/0 and is less safe.
  VPNAdminPassword:
    Description: Password for openvpn admin 
    Type : String
    NoEcho: true

Resources:
    EC2Instance:
      DeletionPolicy: Delete
      Type: AWS::EC2::Instance
      Properties:
          InstanceType: "t3.micro"
          ImageId: !Ref LatestAmiId
          KeyName: !Ref KeyName
          Tags:
               - Value: name
                 Key: kek
          SecurityGroups:
               - !Ref AllowSSHAndHTTP
          UserData: 
            Fn::Base64: !Sub |
                      #!/bin/bash
                      yum -y install https://as-repository.openvpn.net/as-repo-amzn2.rpm
                      yum -y install openvpn-as

                      SOCKET_FILE="/usr/local/openvpn_as/etc/sock/sagent.localroot"
                      TIMEOUT=60

                      # Function to check if the socket file is available
                      is_socket_available() {
                          [[ -S "$SOCKET_FILE" ]]
                      }

                      # Wait for the socket file to be available
                      wait_for_socket() {
                          local end_time=$((SECONDS + TIMEOUT))

                          until is_socket_available || [[ $SECONDS -ge $end_time ]]; do
                              sleep 1
                          done

                          if is_socket_available; then
                              echo "Socket file is available: $SOCKET_FILE"
                          else
                              echo "Timeout: Socket file is not available"
                          fi
                      }

                      # Wait for the socket file
                      wait_for_socket
                      sacli --user openvpn --new_pass "${VPNAdminPassword}" SetLocalPassword
    SessionManagerRole:
      Type: 'AWS::IAM::Role'
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service:
                - ec2.amazonaws.com
              Action:
                - 'sts:AssumeRole'
        Path: /
        ManagedPolicyArns:
          - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
          
    SessionManagerInstanceProfile:
      Type: 'AWS::IAM::InstanceProfile'
      Properties:
        Path: /
        Roles:
          - !Ref SessionManagerRole

    AllowSSHAndHTTP:
      DeletionPolicy: Delete
      Type: AWS::EC2::SecurityGroup
      Properties:
            GroupDescription: Allows SSH and HTTP(S)  
            GroupName: openvpn-security-group
            SecurityGroupIngress:
                - IpProtocol: TCP
                  FromPort: 80
                  ToPort: 80
                  CidrIp: !Ref SSHandWebLocation
                
                - IpProtocol: TCP
                  FromPort: 443
                  ToPort: 443
                  CidrIp: !Ref SSHandWebLocation

                - IpProtocol: TCP
                  FromPort: 22
                  ToPort: 22
                  CidrIp: !Ref SSHandWebLocation


Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - AvailabilityZone
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - PublicDnsName
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - PublicIp 